Observer Pattern:

Observer Pattern is a pattern where a subject keeps a list of observers. Observers rely on sibject to inform them of changes to the state
of the subject

The Subject superclass has three methods, register observer, unregister observer and notify. These are essential for a subject to relate to its observers.
A subject may have zero or more observers registered at any given time. The blog subclass would inherit these methods

The Observer interface only has the update method. An observer must have some to update itself. The subscriber class implements the Observer interface, 
providing the body of an update method, so a subscriber can get what changed in the blog.

Observer design patterns save time when implementing a system. If many objects rely on the state of one, the observer deisgn pattern 
has even more value. The subject manages them and ensures observers are updating themselves as needed.

This behavior pattern is typically used to make it easy to distribute and handle notifications of changes
across systems in a manageable and controlled way.


